
#modelSummaries

starts <- c(modelSummaries$startMeasure, modelSummaries$endMeasure)
startsU <- unique(starts)


if(min(modelSummaries$startMeasure) > 0) {
modeledSegmentsStarts <- c(0, sort(startsU))
addedZero <- 1
} else{
addedZero <- 0
}

if(max(modelSummaries$endMeasure) < maxMeasure) {
maxIncluded <- 0
} else{
maxIncluded <- 1
modeledSegmentsStarts <- modeledSegmentsStarts[modeledSegmentsStarts < max(modeledSegmentsStarts)]
}




SegmentSummaries <-data.frame(matrix(0, length(modeledSegmentsStarts),10))

names(SegmentSummaries) <- eventTable

gModels <- match(modelSummaries$startMeasure,modeledSegmentsStarts)
gModele <- match(modelSummaries$endMeasure, modeledSegmentsStarts)
gModele <- as.vector(na.omit(gModele))
gModele
gModels
#Need to check to see if last segment includes end of route



SegmentSummaries[gModels,] <- modelSummaries

if(maxIncluded > 0){
SegmentSummaries[gModele,"startMeasure"] <- modelSummaries$endMeasure[-dim(modelSummaries)[1]]
SegmentSummaries[gModele,"startElevation"] <- modelSummaries$endElevation[-dim(modelSummaries)[1]]
} else{
SegmentSummaries[gModele,"startMeasure"] <- modelSummaries$endMeasure
SegmentSummaries[gModele,"startElevation"] <- modelSummaries$endElevation
}
#SegmentSummaries

if(SegmentSummaries[1, "endMeasure"] < 1) {
	SegmentSummaries[1, "endMeasure"] <- SegmentSummaries[2, "startMeasure"]
	SegmentSummaries[1, "endElevation"] <- SegmentSummaries[2, "startElevation"]
	
	}



for (endCheck in gModele) {
if(SegmentSummaries[endCheck, "endMeasure"] < 1) {
	SegmentSummaries[endCheck, "endMeasure"] <- SegmentSummaries[endCheck + 1, "startMeasure"]
	SegmentSummaries[endCheck, "endElevation"] <- SegmentSummaries[endCheck + 1, "startElevation"]
	
	}
}

#Add maxes to last line if final model did not include it
if(SegmentSummaries[dim(SegmentSummaries)[1], "endMeasure"] < 1 | is.na(SegmentSummaries[dim(SegmentSummaries)[1], "endMeasure"])) {
	SegmentSummaries[dim(SegmentSummaries)[1], "endMeasure"] <- maxMeasure
	SegmentSummaries[dim(SegmentSummaries)[1], "endElevation"] <- maxElevation
	
	}


SegmentSummaries[,1] <- max(SegmentSummaries[,1])
#SegmentSummaries
write.dbf(SegmentSummaries, "C:\\data\\ProjectsLocal\\Segments\\Hood_Canal_Gradient\\eventsID.dbf")
#length(myModels)
#getSlot(myModels, "mstart")
#getSlot(myModels, "mend")